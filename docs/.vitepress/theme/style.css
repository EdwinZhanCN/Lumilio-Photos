/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 *
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attached to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  --vp-c-brand-1: var(--vp-c-indigo-1);
  --vp-c-brand-2: var(--vp-c-indigo-2);
  --vp-c-brand-3: var(--vp-c-indigo-3);
  --vp-c-brand-soft: var(--vp-c-indigo-soft);

  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);
}

/**
 * Component: Button
 * -------------------------------------------------------------------------- */

:root {
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

/**
 * Component: Home
 * -------------------------------------------------------------------------- */

:root {
  --vp-home-hero-name-color: transparent;
  --vp-home-hero-name-background: -webkit-linear-gradient(
    120deg,
    #FE8240 30%,
    #FFC183
  );

  --vp-home-hero-image-background-image: linear-gradient(
    -45deg,
    #bd34fe 50%,
    #47caff 50%
  );
  --vp-home-hero-image-filter: blur(44px);

  --vp-home-text-strong-primary: var(--vp-c-brand-1);
  --vp-home-text-strong-secondary: var(--vp-c-brand-2);
  --vp-home-text-strong-tertiary: var(--vp-c-brand-3);
}

@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(68px);
  }
}



/**
 * Component: Custom Block
 * -------------------------------------------------------------------------- */

:root {
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

/**
 * Component: Algolia
 * -------------------------------------------------------------------------- */

.DocSearch {
  --docsearch-primary-color: var(--vp-c-brand-1) !important;
}

link[rel="icon"] {
  background-size: contain;
  object-fit: contain;
}

.text-wrapper {
  /* 默认在小屏幕上居中 */
  text-align: left;
  height: max-content;
  position: relative;
  white-space: nowrap;
  display: inline-block;
  width: 100%; /* 确保容器宽度适应父元素 */
  margin-left: 10px;

}

/* 大屏幕（宽度 ≥ 768px）左对齐 */
@media (min-width: 960px) {
  .text-wrapper {
    text-align: left;
    display: inline-block; /* 让容器占据整行 */
    margin-left: 0;
  }
}

/* 基础样式 */
.text-strong-primary,
.text-strong-secondary,
.text-strong-tertiary {
  display: inline-block;
  margin-inline-start: 0;
  margin-inline-end: 0;
  opacity: 0;
  animation: text-swap 18s infinite ease-in-out;
}

/* 主色文本 */
.text-strong-primary {
  color: #3FFF92;
  font-weight: lighter !important;
  animation-delay: 0s;
  position: relative;
}

/* 副色文本 */
.text-strong-secondary {

  /* 深空灰基础色 + 金属高光渐变 */
  background: linear-gradient(to bottom, #ffb6ff, #b344ff);
  color: transparent;
  -webkit-background-clip:text;
  background-clip: text;
  position: absolute;
  top: 0;
  left: 0;
  animation-delay: 6s;
}

.text-strong-tertiary {
  background: -webkit-linear-gradient(
          120deg,
          #FF6B6B 10%,
          #FF8E53 30%,
          #FFC154 50%,
          #47B39D 70%,
          #1A8FE3 90%
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  position: absolute;
  top: 0;
  left: 0;
  animation-delay: 12s;
}

/* 大屏幕时调整绝对定位元素的左对齐 */
@media (min-width: 960px) {
  .text-strong-secondary,
  .text-strong-tertiary {
    left: 0; /* 左对齐 */
    transform: none; /* 移除居中偏移 */
  }
}

/* 确保定义动画 */
@keyframes text-swap {
  0%, 33.33% {
    opacity: 1;
  }
  33.34%, 100% {
    opacity: 0;
  }
}

/* 关键帧：交替显示 */
@keyframes text-swap {
  0%, 30% {
    opacity: 0;
    transform: translateY(20px);
  }
  33%, 63% {
    opacity: 1;
    transform: translateY(0);
  }
  66%, 100% {
    opacity: 0;
    transform: translateY(-20px);
  }
}


