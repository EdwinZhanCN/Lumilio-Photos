import{_ as e,c as o,o as l,ae as i}from"./chunks/framework.Dh1jimFm.js";const m=JSON.parse('{"title":"安装指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/user-manual/Installation.md","filePath":"zh-cn/user-manual/Installation.md","lastUpdated":1744240010000}'),r={name:"zh-cn/user-manual/Installation.md"};function t(n,a,h,d,c,s){return l(),o("div",null,a[0]||(a[0]=[i('<h1 id="安装指南" tabindex="-1">安装指南 <a class="header-anchor" href="#安装指南" aria-label="Permalink to &quot;安装指南&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">重要</p><p>请先阅读 <a href="./user-manual-overview.html#compatibility">应用兼容性</a>！</p></div><h2 id="安装docker" tabindex="-1">安装Docker <a class="header-anchor" href="#安装docker" aria-label="Permalink to &quot;安装Docker&quot;">​</a></h2><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><h3 id="mac" tabindex="-1">Mac <a class="header-anchor" href="#mac" aria-label="Permalink to &quot;Mac&quot;">​</a></h3><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><h2 id="docker-compose" tabindex="-1">Docker-Compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;Docker-Compose&quot;">​</a></h2><h3 id="lumilio-app" tabindex="-1">lumilio-app <a class="header-anchor" href="#lumilio-app" aria-label="Permalink to &quot;lumilio-app&quot;">​</a></h3><h3 id="lumilio-db" tabindex="-1">lumilio-db <a class="header-anchor" href="#lumilio-db" aria-label="Permalink to &quot;lumilio-db&quot;">​</a></h3><h3 id="lumilio-ml" tabindex="-1">lumilio-ml <a class="header-anchor" href="#lumilio-ml" aria-label="Permalink to &quot;lumilio-ml&quot;">​</a></h3><h2 id="cpu加速" tabindex="-1">CPU加速 <a class="header-anchor" href="#cpu加速" aria-label="Permalink to &quot;CPU加速&quot;">​</a></h2><h3 id="x86-avx" tabindex="-1">X86 (AVX) <a class="header-anchor" href="#x86-avx" aria-label="Permalink to &quot;X86 (AVX)&quot;">​</a></h3><h3 id="arm-simd" tabindex="-1">ARM (SIMD) <a class="header-anchor" href="#arm-simd" aria-label="Permalink to &quot;ARM (SIMD)&quot;">​</a></h3><h2 id="gpu加速" tabindex="-1">GPU加速 <a class="header-anchor" href="#gpu加速" aria-label="Permalink to &quot;GPU加速&quot;">​</a></h2><h3 id="nvidia-cuda" tabindex="-1">NVIDIA (CUDA) <a class="header-anchor" href="#nvidia-cuda" aria-label="Permalink to &quot;NVIDIA (CUDA)&quot;">​</a></h3><h3 id="amd-rocm" tabindex="-1">AMD (ROCm) <a class="header-anchor" href="#amd-rocm" aria-label="Permalink to &quot;AMD (ROCm)&quot;">​</a></h3><h3 id="intel-dlboost" tabindex="-1">Intel (DLBoost) <a class="header-anchor" href="#intel-dlboost" aria-label="Permalink to &quot;Intel (DLBoost)&quot;">​</a></h3><p>等待列表</p><h2 id="npu加速" tabindex="-1">NPU加速 <a class="header-anchor" href="#npu加速" aria-label="Permalink to &quot;NPU加速&quot;">​</a></h2><h3 id="rockchip-rnnx" tabindex="-1">RockChip (RNNX) <a class="header-anchor" href="#rockchip-rnnx" aria-label="Permalink to &quot;RockChip (RNNX)&quot;">​</a></h3><h3 id="apple-ane" tabindex="-1">Apple (ANE) <a class="header-anchor" href="#apple-ane" aria-label="Permalink to &quot;Apple (ANE)&quot;">​</a></h3><h3 id="qualcomm-hexagon-dsp" tabindex="-1">Qualcomm (Hexagon DSP) <a class="header-anchor" href="#qualcomm-hexagon-dsp" aria-label="Permalink to &quot;Qualcomm (Hexagon DSP)&quot;">​</a></h3><p>等待列表</p><h3 id="google-tpu" tabindex="-1">Google (TPU) <a class="header-anchor" href="#google-tpu" aria-label="Permalink to &quot;Google (TPU)&quot;">​</a></h3><p>等待列表</p>',25)]))}const p=e(r,[["render",t]]);export{m as __pageData,p as default};
