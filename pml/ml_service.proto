syntax = "proto3";

package prediction;

option go_package = "github.com/EdwinZhanCN/Lumilio-Photos/proto";

// 预测服务定义
service PredictionService {
    // 请求单个预测
    rpc Predict(PredictRequest) returns (PredictResponse) {}

    // 批量预测
    rpc BatchPredict(BatchPredictRequest) returns (BatchPredictResponse) {}

    // 模型状态检查
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}
}

// 单个预测请求
message PredictRequest {
    // 输入特征，根据模型需求可调整
    repeated float features = 1;
    string model_version = 2; // 可选，指定模型版本
}

// 预测响应
message PredictResponse {
    repeated float prediction = 1; // 预测结果数组
    float confidence = 2;         // 置信度
    string model_version = 3;     // 使用的模型版本
    int64 prediction_time = 4;    // Unix时间戳（毫秒）
}

// 批量预测请求
message BatchPredictRequest {
    repeated PredictRequest requests = 1;
}

// 批量预测响应
message BatchPredictResponse {
    repeated PredictResponse responses = 1;
    int32 success_count = 2;
    int32 failed_count = 3;
}

// 健康检查请求
message HealthCheckRequest {
    string service = 1;
}

// 健康检查响应
message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
        SERVICE_UNKNOWN = 3;
    }
    ServingStatus status = 1;
    string model_version = 2;
    int64 uptime_seconds = 3;
}