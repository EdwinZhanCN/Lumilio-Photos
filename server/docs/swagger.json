{
    "swagger": "2.0",
    "info": {
        "description": "Photo management system API with asset upload, processing, and organization features",
        "title": "RKPhoto Manager API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3001",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/assets": {
            "get": {
                "description": "Retrieve a paginated list of assets with optional filtering by type, owner, or search query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "List assets with filtering",
                "parameters": [
                    {
                        "enum": [
                            "PHOTO",
                            "VIDEO",
                            "AUDIO",
                            "DOCUMENT"
                        ],
                        "type": "string",
                        "example": "\"PHOTO\"",
                        "description": "Asset type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 123,
                        "description": "Filter by owner ID",
                        "name": "owner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"vacation\"",
                        "description": "Search query for filename",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Maximum number of results (max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 0,
                        "description": "Number of results to skip for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assets retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.AssetListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a single photo, video, audio file or document to the system",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Upload a single asset",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Asset file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client-calculated BLAKE3 hash of the file",
                        "name": "X-Content-Hash",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.UploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - no file provided or parse error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            }
        },
        "/api/v1/assets/batch": {
            "post": {
                "description": "Upload multiple files in a single request for batch processing",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Upload multiple assets",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Multiple asset files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client-calculated BLAKE3 hash (for single file batch)",
                        "name": "X-Content-Hash",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch upload completed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.BatchUploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - no files provided or parse error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            }
        },
        "/api/v1/assets/types": {
            "get": {
                "description": "Retrieve a list of all supported asset types in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get supported asset types",
                "responses": {
                    "200": {
                        "description": "Asset types retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.AssetTypesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/assets/{id}": {
            "get": {
                "description": "Retrieve detailed information about a specific asset including metadata, thumbnails, tags and albums",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get asset by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Asset ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Asset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid asset ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the specific metadata of an asset (e.g., photo EXIF data, video metadata)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Update asset metadata",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Asset ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated metadata",
                        "name": "metadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.MessageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid asset ID or request body",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            },
            "delete": {
                "description": "Soft delete an asset by marking it as deleted (does not remove the physical file)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Delete an asset",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Asset ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.MessageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid asset ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            }
        },
        "/api/v1/assets/{id}/albums/{albumId}": {
            "post": {
                "description": "Associate an asset with a specific album",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Add asset to album",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Asset ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 123,
                        "description": "Album ID",
                        "name": "albumId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset added to album successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.MessageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid asset ID or album ID",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Result": {
            "description": "Standard API response wrapper",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Business status code (0 for success, non-zero for errors)",
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "description": "Business data, ignore empty values",
                    "type": "object"
                },
                "error": {
                    "description": "Debug error message, ignore empty values",
                    "type": "string",
                    "example": "error details"
                },
                "message": {
                    "description": "User readable message",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handler.AssetListResponse": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Asset"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "handler.AssetTypesResponse": {
            "type": "object",
            "properties": {
                "types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AssetType"
                    }
                }
            }
        },
        "handler.BatchUploadResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "handler.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                }
            }
        },
        "handler.UpdateAssetRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/models.SpecificMetadata"
                }
            }
        },
        "handler.UploadResponse": {
            "type": "object",
            "properties": {
                "content_hash": {
                    "type": "string",
                    "example": "abcd1234567890"
                },
                "file_name": {
                    "type": "string",
                    "example": "photo.jpg"
                },
                "message": {
                    "type": "string",
                    "example": "File received and queued for processing"
                },
                "size": {
                    "type": "integer",
                    "example": 1048576
                },
                "status": {
                    "type": "string",
                    "example": "processing"
                },
                "task_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "models.Album": {
            "description": "Album for organizing and grouping related assets",
            "type": "object",
            "properties": {
                "album_id": {
                    "type": "integer",
                    "example": 1
                },
                "album_name": {
                    "type": "string",
                    "example": "Vacation 2024"
                },
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Asset"
                    }
                },
                "cover_asset": {
                    "$ref": "#/definitions/models.Asset"
                },
                "cover_asset_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Photos and videos from our summer vacation"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-16T10:30:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 123
                }
            }
        },
        "models.Asset": {
            "description": "Digital asset (photo, video, audio, document) with metadata and relationships",
            "type": "object",
            "properties": {
                "albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Album"
                    }
                },
                "asset_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2024-01-16T10:30:00Z"
                },
                "duration": {
                    "description": "For video/audio assets in seconds",
                    "type": "number",
                    "example": 120.5
                },
                "file_size": {
                    "type": "integer",
                    "example": 1048576
                },
                "hash": {
                    "type": "string",
                    "example": "abcd1234567890efgh"
                },
                "height": {
                    "type": "integer",
                    "example": 1080
                },
                "is_deleted": {
                    "type": "boolean",
                    "example": false
                },
                "mime_type": {
                    "type": "string",
                    "example": "image/jpeg"
                },
                "original_filename": {
                    "type": "string",
                    "example": "vacation_photo.jpg"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 123
                },
                "specific_metadata": {
                    "description": "JSON field for type-specific metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SpecificMetadata"
                        }
                    ]
                },
                "storage_path": {
                    "type": "string",
                    "example": "2024/01/abc123.jpg"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "thumbnails": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Thumbnail"
                    }
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.AssetType"
                        }
                    ],
                    "example": "PHOTO"
                },
                "upload_time": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "width": {
                    "type": "integer",
                    "example": 1920
                }
            }
        },
        "models.AssetType": {
            "description": "Type of digital asset",
            "type": "string",
            "enum": [
                "PHOTO",
                "VIDEO",
                "AUDIO",
                "DOCUMENT"
            ],
            "x-enum-varnames": [
                "AssetTypePhoto",
                "AssetTypeVideo",
                "AssetTypeAudio",
                "AssetTypeDocument"
            ]
        },
        "models.SpecificMetadata": {
            "description": "Type-specific metadata stored as JSON",
            "type": "object",
            "additionalProperties": true
        },
        "models.Tag": {
            "description": "Tag for categorizing and labeling assets",
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Asset"
                    }
                },
                "category": {
                    "type": "string",
                    "example": "subject"
                },
                "is_ai_generated": {
                    "type": "boolean",
                    "example": true
                },
                "tag_id": {
                    "type": "integer",
                    "example": 1
                },
                "tag_name": {
                    "type": "string",
                    "example": "landscape"
                }
            }
        },
        "models.Thumbnail": {
            "description": "Thumbnail image for assets (photos, videos, etc.)",
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "mime_type": {
                    "description": "For video thumbnails, this might be image/jpeg",
                    "type": "string",
                    "example": "image/jpeg"
                },
                "size": {
                    "type": "string",
                    "enum": [
                        "small",
                        "medium",
                        "large"
                    ],
                    "example": "medium"
                },
                "storage_path": {
                    "type": "string",
                    "example": "thumbnails/2024/01/thumb_abc123.jpg"
                },
                "thumbnail_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}