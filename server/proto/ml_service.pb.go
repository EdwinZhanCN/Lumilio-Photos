// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: ml_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ---- 统一的错误码（精简）----
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED       ErrorCode = 0
	ErrorCode_ERROR_CODE_INVALID_ARGUMENT  ErrorCode = 1
	ErrorCode_ERROR_CODE_UNAVAILABLE       ErrorCode = 2 // 下游/硬件/资源不可用
	ErrorCode_ERROR_CODE_DEADLINE_EXCEEDED ErrorCode = 3
	ErrorCode_ERROR_CODE_INTERNAL          ErrorCode = 4
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ERROR_CODE_UNSPECIFIED",
		1: "ERROR_CODE_INVALID_ARGUMENT",
		2: "ERROR_CODE_UNAVAILABLE",
		3: "ERROR_CODE_DEADLINE_EXCEEDED",
		4: "ERROR_CODE_INTERNAL",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":       0,
		"ERROR_CODE_INVALID_ARGUMENT":  1,
		"ERROR_CODE_UNAVAILABLE":       2,
		"ERROR_CODE_DEADLINE_EXCEEDED": 3,
		"ERROR_CODE_INTERNAL":          4,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_ml_service_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_ml_service_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{0}
}

// ---- 标准错误载体（与 gRPC status 一起用：致命错误可直接结束流）----
type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrorCode              `protobuf:"varint,1,opt,name=code,proto3,enum=home_native.v1.ErrorCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Detail        string                 `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"` // 便于日志/排障（栈、节点ID等）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_ml_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

// ---- 结构化的任务 I/O 描述（便于中心路由与前端协商）----
type IOTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                               // "embed","detect","ocr","asr","generate","tts",...
	InputMimes    []string               `protobuf:"bytes,2,rep,name=input_mimes,json=inputMimes,proto3" json:"input_mimes,omitempty"`                                                 // 允许多种输入："image/jpeg","audio/pcm;rate=16000","application/json"
	OutputMimes   []string               `protobuf:"bytes,3,rep,name=output_mimes,json=outputMimes,proto3" json:"output_mimes,omitempty"`                                              // 典型输出："application/json;schema=bbox_v1","audio/wav"
	Limits        map[string]string      `protobuf:"bytes,4,rep,name=limits,proto3" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 如 max_hw=1024,max_batch=8,max_length=4096 等
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOTask) Reset() {
	*x = IOTask{}
	mi := &file_ml_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOTask) ProtoMessage() {}

func (x *IOTask) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOTask.ProtoReflect.Descriptor instead.
func (*IOTask) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{1}
}

func (x *IOTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IOTask) GetInputMimes() []string {
	if x != nil {
		return x.InputMimes
	}
	return nil
}

func (x *IOTask) GetOutputMimes() []string {
	if x != nil {
		return x.OutputMimes
	}
	return nil
}

func (x *IOTask) GetLimits() map[string]string {
	if x != nil {
		return x.Limits
	}
	return nil
}

// ---- 能力宣告（服务上线时或按需获取）----
type Capability struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceName    string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`                                            // "clip-embedder","ocr","llm","tts",...
	ModelIds       []string               `protobuf:"bytes,2,rep,name=model_ids,json=modelIds,proto3" json:"model_ids,omitempty"`                                                     // 支持的模型/版本
	Runtime        string                 `protobuf:"bytes,3,opt,name=runtime,proto3" json:"runtime,omitempty"`                                                                       // "onnxrt-cuda","tensorrt","coreml","rknn","qnn","cpu"
	MaxConcurrency uint32                 `protobuf:"varint,4,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`                                  // 建议并发
	Precisions     []string               `protobuf:"bytes,5,rep,name=precisions,proto3" json:"precisions,omitempty"`                                                                 // ["fp32","fp16","int8"]
	Extra          map[string]string      `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 分辨率上/下限、ANE/NPU 等特性
	Tasks          []*IOTask              `protobuf:"bytes,7,rep,name=tasks,proto3" json:"tasks,omitempty"`                                                                           // 结构化的 task 能力（推荐使用）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Capability) Reset() {
	*x = Capability{}
	mi := &file_ml_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capability) ProtoMessage() {}

func (x *Capability) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capability.ProtoReflect.Descriptor instead.
func (*Capability) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{2}
}

func (x *Capability) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Capability) GetModelIds() []string {
	if x != nil {
		return x.ModelIds
	}
	return nil
}

func (x *Capability) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *Capability) GetMaxConcurrency() uint32 {
	if x != nil {
		return x.MaxConcurrency
	}
	return 0
}

func (x *Capability) GetPrecisions() []string {
	if x != nil {
		return x.Precisions
	}
	return nil
}

func (x *Capability) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Capability) GetTasks() []*IOTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// ---- 推理请求（双向流的入向消息）----
type InferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`                                    // 追踪/对账
	Task          string                 `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`                                                                           // "embed","classify","detect","ocr","asr","generate","tts",...
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                                                                     // 原始片段（二进制/UTF-8 文本均可）
	Meta          map[string]string      `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 任务自定义参数：model_id, conf_thres, stop 等
	// --- 新增：输入内容类型与分片控制 ---
	PayloadMime   string `protobuf:"bytes,5,opt,name=payload_mime,json=payloadMime,proto3" json:"payload_mime,omitempty"` // e.g. "image/jpeg","audio/pcm;rate=16000","application/json"
	Seq           uint64 `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`                                   // 分片序号（0 起）
	Total         uint64 `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`                               // 可选：总分片数（未知则不填）
	Offset        uint64 `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`                             // 可选：payload 在整体流中的字节偏移
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferRequest) Reset() {
	*x = InferRequest{}
	mi := &file_ml_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferRequest) ProtoMessage() {}

func (x *InferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferRequest.ProtoReflect.Descriptor instead.
func (*InferRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{3}
}

func (x *InferRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *InferRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *InferRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *InferRequest) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InferRequest) GetPayloadMime() string {
	if x != nil {
		return x.PayloadMime
	}
	return ""
}

func (x *InferRequest) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *InferRequest) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InferRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// ---- 推理响应（双向流的出向消息）----
type InferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	IsFinal       bool                   `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`                                                     // 流式增量 or 最终结果
	Result        []byte                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`                                                                       // 结果二进制；若为 JSON，请用 result_mime 标明
	Meta          map[string]string      `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 例如 lat_ms, tokens, bboxes_count
	Error         *Error                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                                                         // 仅在失败时填（致命错误也可直接结束流）
	// --- 新增：输出内容类型与分片控制 ---
	Seq           uint64 `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`                                       // 分片序号（0 起），用于增量/音频/视频分片
	Total         uint64 `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`                                   // 可选：总分片数
	Offset        uint64 `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`                                 // 可选：result 在整体输出中的字节偏移
	ResultMime    string `protobuf:"bytes,9,opt,name=result_mime,json=resultMime,proto3" json:"result_mime,omitempty"`        // e.g. "application/json;schema=embedding_v1","audio/wav","image/png"
	ResultSchema  string `protobuf:"bytes,10,opt,name=result_schema,json=resultSchema,proto3" json:"result_schema,omitempty"` // 可选：显式 schema 名（如 "bbox_v1","mask_rle_v1"）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferResponse) Reset() {
	*x = InferResponse{}
	mi := &file_ml_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferResponse) ProtoMessage() {}

func (x *InferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferResponse.ProtoReflect.Descriptor instead.
func (*InferResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{4}
}

func (x *InferResponse) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *InferResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *InferResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *InferResponse) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *InferResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *InferResponse) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *InferResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InferResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *InferResponse) GetResultMime() string {
	if x != nil {
		return x.ResultMime
	}
	return ""
}

func (x *InferResponse) GetResultSchema() string {
	if x != nil {
		return x.ResultSchema
	}
	return ""
}

var File_ml_service_proto protoreflect.FileDescriptor

const file_ml_service_proto_rawDesc = "" +
	"\n" +
	"\x10ml_service.proto\x12\x0ehome_native.v1\x1a\x1bgoogle/protobuf/empty.proto\"h\n" +
	"\x05Error\x12-\n" +
	"\x04code\x18\x01 \x01(\x0e2\x19.home_native.v1.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06detail\x18\x03 \x01(\tR\x06detail\"\xd7\x01\n" +
	"\x06IOTask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vinput_mimes\x18\x02 \x03(\tR\n" +
	"inputMimes\x12!\n" +
	"\foutput_mimes\x18\x03 \x03(\tR\voutputMimes\x12:\n" +
	"\x06limits\x18\x04 \x03(\v2\".home_native.v1.IOTask.LimitsEntryR\x06limits\x1a9\n" +
	"\vLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x02\n" +
	"\n" +
	"Capability\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1b\n" +
	"\tmodel_ids\x18\x02 \x03(\tR\bmodelIds\x12\x18\n" +
	"\aruntime\x18\x03 \x01(\tR\aruntime\x12'\n" +
	"\x0fmax_concurrency\x18\x04 \x01(\rR\x0emaxConcurrency\x12\x1e\n" +
	"\n" +
	"precisions\x18\x05 \x03(\tR\n" +
	"precisions\x12;\n" +
	"\x05extra\x18\x06 \x03(\v2%.home_native.v1.Capability.ExtraEntryR\x05extra\x12,\n" +
	"\x05tasks\x18\a \x03(\v2\x16.home_native.v1.IOTaskR\x05tasks\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbb\x02\n" +
	"\fInferRequest\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\tR\rcorrelationId\x12\x12\n" +
	"\x04task\x18\x02 \x01(\tR\x04task\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12:\n" +
	"\x04meta\x18\x04 \x03(\v2&.home_native.v1.InferRequest.MetaEntryR\x04meta\x12!\n" +
	"\fpayload_mime\x18\x05 \x01(\tR\vpayloadMime\x12\x10\n" +
	"\x03seq\x18\x06 \x01(\x04R\x03seq\x12\x14\n" +
	"\x05total\x18\a \x01(\x04R\x05total\x12\x16\n" +
	"\x06offset\x18\b \x01(\x04R\x06offset\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x03\n" +
	"\rInferResponse\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\tR\rcorrelationId\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\x12\x16\n" +
	"\x06result\x18\x03 \x01(\fR\x06result\x12;\n" +
	"\x04meta\x18\x04 \x03(\v2'.home_native.v1.InferResponse.MetaEntryR\x04meta\x12+\n" +
	"\x05error\x18\x05 \x01(\v2\x15.home_native.v1.ErrorR\x05error\x12\x10\n" +
	"\x03seq\x18\x06 \x01(\x04R\x03seq\x12\x14\n" +
	"\x05total\x18\a \x01(\x04R\x05total\x12\x16\n" +
	"\x06offset\x18\b \x01(\x04R\x06offset\x12\x1f\n" +
	"\vresult_mime\x18\t \x01(\tR\n" +
	"resultMime\x12#\n" +
	"\rresult_schema\x18\n" +
	" \x01(\tR\fresultSchema\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x9f\x01\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bERROR_CODE_INVALID_ARGUMENT\x10\x01\x12\x1a\n" +
	"\x16ERROR_CODE_UNAVAILABLE\x10\x02\x12 \n" +
	"\x1cERROR_CODE_DEADLINE_EXCEEDED\x10\x03\x12\x17\n" +
	"\x13ERROR_CODE_INTERNAL\x10\x042\xa2\x02\n" +
	"\tInference\x12H\n" +
	"\x05Infer\x12\x1c.home_native.v1.InferRequest\x1a\x1d.home_native.v1.InferResponse(\x010\x01\x12E\n" +
	"\x0fGetCapabilities\x12\x16.google.protobuf.Empty\x1a\x1a.home_native.v1.Capability\x12J\n" +
	"\x12StreamCapabilities\x12\x16.google.protobuf.Empty\x1a\x1a.home_native.v1.Capability0\x01\x128\n" +
	"\x06Health\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.EmptyB\x0eZ\fserver/protob\x06proto3"

var (
	file_ml_service_proto_rawDescOnce sync.Once
	file_ml_service_proto_rawDescData []byte
)

func file_ml_service_proto_rawDescGZIP() []byte {
	file_ml_service_proto_rawDescOnce.Do(func() {
		file_ml_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ml_service_proto_rawDesc), len(file_ml_service_proto_rawDesc)))
	})
	return file_ml_service_proto_rawDescData
}

var file_ml_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ml_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ml_service_proto_goTypes = []any{
	(ErrorCode)(0),        // 0: home_native.v1.ErrorCode
	(*Error)(nil),         // 1: home_native.v1.Error
	(*IOTask)(nil),        // 2: home_native.v1.IOTask
	(*Capability)(nil),    // 3: home_native.v1.Capability
	(*InferRequest)(nil),  // 4: home_native.v1.InferRequest
	(*InferResponse)(nil), // 5: home_native.v1.InferResponse
	nil,                   // 6: home_native.v1.IOTask.LimitsEntry
	nil,                   // 7: home_native.v1.Capability.ExtraEntry
	nil,                   // 8: home_native.v1.InferRequest.MetaEntry
	nil,                   // 9: home_native.v1.InferResponse.MetaEntry
	(*emptypb.Empty)(nil), // 10: google.protobuf.Empty
}
var file_ml_service_proto_depIdxs = []int32{
	0,  // 0: home_native.v1.Error.code:type_name -> home_native.v1.ErrorCode
	6,  // 1: home_native.v1.IOTask.limits:type_name -> home_native.v1.IOTask.LimitsEntry
	7,  // 2: home_native.v1.Capability.extra:type_name -> home_native.v1.Capability.ExtraEntry
	2,  // 3: home_native.v1.Capability.tasks:type_name -> home_native.v1.IOTask
	8,  // 4: home_native.v1.InferRequest.meta:type_name -> home_native.v1.InferRequest.MetaEntry
	9,  // 5: home_native.v1.InferResponse.meta:type_name -> home_native.v1.InferResponse.MetaEntry
	1,  // 6: home_native.v1.InferResponse.error:type_name -> home_native.v1.Error
	4,  // 7: home_native.v1.Inference.Infer:input_type -> home_native.v1.InferRequest
	10, // 8: home_native.v1.Inference.GetCapabilities:input_type -> google.protobuf.Empty
	10, // 9: home_native.v1.Inference.StreamCapabilities:input_type -> google.protobuf.Empty
	10, // 10: home_native.v1.Inference.Health:input_type -> google.protobuf.Empty
	5,  // 11: home_native.v1.Inference.Infer:output_type -> home_native.v1.InferResponse
	3,  // 12: home_native.v1.Inference.GetCapabilities:output_type -> home_native.v1.Capability
	3,  // 13: home_native.v1.Inference.StreamCapabilities:output_type -> home_native.v1.Capability
	10, // 14: home_native.v1.Inference.Health:output_type -> google.protobuf.Empty
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_ml_service_proto_init() }
func file_ml_service_proto_init() {
	if File_ml_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ml_service_proto_rawDesc), len(file_ml_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ml_service_proto_goTypes,
		DependencyIndexes: file_ml_service_proto_depIdxs,
		EnumInfos:         file_ml_service_proto_enumTypes,
		MessageInfos:      file_ml_service_proto_msgTypes,
	}.Build()
	File_ml_service_proto = out.File
	file_ml_service_proto_goTypes = nil
	file_ml_service_proto_depIdxs = nil
}
