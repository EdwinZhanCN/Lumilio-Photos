// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: ml_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN                HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING                HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING            HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_SPECIFIC_ERROR HealthCheckResponse_ServingStatus = 3 // 区分是服务未知还是服务内部错误
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_SPECIFIC_ERROR",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":                0,
		"SERVING":                1,
		"NOT_SERVING":            2,
		"SERVICE_SPECIFIC_ERROR": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ml_service_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_ml_service_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{12, 0}
}

// ---- 新增：结果状态 ----
type BioAtlasResponse_Status int32

const (
	BioAtlasResponse_OK              BioAtlasResponse_Status = 0 // 成功返回物种
	BioAtlasResponse_NOT_ANIMAL      BioAtlasResponse_Status = 1 // 不是动物，BioAtlas 不适用
	BioAtlasResponse_MODEL_ERROR     BioAtlasResponse_Status = 2 // BioCLIP 内部错误
	BioAtlasResponse_INVALID_REQUEST BioAtlasResponse_Status = 3 // 图像为空、分辨率过低等
)

// Enum value maps for BioAtlasResponse_Status.
var (
	BioAtlasResponse_Status_name = map[int32]string{
		0: "OK",
		1: "NOT_ANIMAL",
		2: "MODEL_ERROR",
		3: "INVALID_REQUEST",
	}
	BioAtlasResponse_Status_value = map[string]int32{
		"OK":              0,
		"NOT_ANIMAL":      1,
		"MODEL_ERROR":     2,
		"INVALID_REQUEST": 3,
	}
)

func (x BioAtlasResponse_Status) Enum() *BioAtlasResponse_Status {
	p := new(BioAtlasResponse_Status)
	*p = x
	return p
}

func (x BioAtlasResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BioAtlasResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ml_service_proto_enumTypes[1].Descriptor()
}

func (BioAtlasResponse_Status) Type() protoreflect.EnumType {
	return &file_ml_service_proto_enumTypes[1]
}

func (x BioAtlasResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BioAtlasResponse_Status.Descriptor instead.
func (BioAtlasResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{13, 0}
}

type LabelScore struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Label           string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`                                              // 预测的标签
	SimilarityScore float32                `protobuf:"fixed32,2,opt,name=similarity_score,json=similarityScore,proto3" json:"similarity_score,omitempty"` // 对应的相似度得分
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LabelScore) Reset() {
	*x = LabelScore{}
	mi := &file_ml_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelScore) ProtoMessage() {}

func (x *LabelScore) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelScore.ProtoReflect.Descriptor instead.
func (*LabelScore) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{0}
}

func (x *LabelScore) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LabelScore) GetSimilarityScore() float32 {
	if x != nil {
		return x.SimilarityScore
	}
	return 0
}

// ImageProcessRequest: CLIP图像处理请求
type ImageProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`                // 图片的唯一ID，用于追踪
	ImageData     []byte                 `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`          // 图片原始字节数据 (e.g., JPEG, PNG)
	TargetLabels  []string               `protobuf:"bytes,3,rep,name=target_labels,json=targetLabels,proto3" json:"target_labels,omitempty"` // (Optional) 期望分类的标签列表，用于零样本分类
	ModelVersion  string                 `protobuf:"bytes,4,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // (Optional) 指定CLIP模型版本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageProcessRequest) Reset() {
	*x = ImageProcessRequest{}
	mi := &file_ml_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageProcessRequest) ProtoMessage() {}

func (x *ImageProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageProcessRequest.ProtoReflect.Descriptor instead.
func (*ImageProcessRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{1}
}

func (x *ImageProcessRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ImageProcessRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ImageProcessRequest) GetTargetLabels() []string {
	if x != nil {
		return x.TargetLabels
	}
	return nil
}

func (x *ImageProcessRequest) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

// ImageProcessResponse: CLIP图像处理响应
type ImageProcessResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ImageId            string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`                                             // 对应的图片ID
	ImageFeatureVector []float32              `protobuf:"fixed32,2,rep,packed,name=image_feature_vector,json=imageFeatureVector,proto3" json:"image_feature_vector,omitempty"` // CLIP图像特征向量
	PredictedScores    []*LabelScore          `protobuf:"bytes,3,rep,name=predicted_scores,json=predictedScores,proto3" json:"predicted_scores,omitempty"`                     // 预测的标签和对应的相似度得分列表
	ModelVersion       string                 `protobuf:"bytes,4,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`                              // 使用的模型版本
	ProcessingTimeMs   int64                  `protobuf:"varint,5,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`               // 处理时间（毫秒）
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ImageProcessResponse) Reset() {
	*x = ImageProcessResponse{}
	mi := &file_ml_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageProcessResponse) ProtoMessage() {}

func (x *ImageProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageProcessResponse.ProtoReflect.Descriptor instead.
func (*ImageProcessResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{2}
}

func (x *ImageProcessResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ImageProcessResponse) GetImageFeatureVector() []float32 {
	if x != nil {
		return x.ImageFeatureVector
	}
	return nil
}

func (x *ImageProcessResponse) GetPredictedScores() []*LabelScore {
	if x != nil {
		return x.PredictedScores
	}
	return nil
}

func (x *ImageProcessResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *ImageProcessResponse) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

// TextEmbeddingRequest: CLIP文本嵌入请求
type TextEmbeddingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                                     // 输入的文本字符串
	ModelVersion  string                 `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // (Optional) 指定CLIP模型版本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextEmbeddingRequest) Reset() {
	*x = TextEmbeddingRequest{}
	mi := &file_ml_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextEmbeddingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextEmbeddingRequest) ProtoMessage() {}

func (x *TextEmbeddingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextEmbeddingRequest.ProtoReflect.Descriptor instead.
func (*TextEmbeddingRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{3}
}

func (x *TextEmbeddingRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextEmbeddingRequest) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

// TextEmbeddingResponse: CLIP文本嵌入响应
type TextEmbeddingResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TextFeatureVector []float32              `protobuf:"fixed32,1,rep,packed,name=text_feature_vector,json=textFeatureVector,proto3" json:"text_feature_vector,omitempty"` // CLIP文本特征向量
	ModelVersion      string                 `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`                           // 使用的模型版本
	ProcessingTimeMs  int64                  `protobuf:"varint,3,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`            // 处理时间（毫秒）
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TextEmbeddingResponse) Reset() {
	*x = TextEmbeddingResponse{}
	mi := &file_ml_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextEmbeddingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextEmbeddingResponse) ProtoMessage() {}

func (x *TextEmbeddingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextEmbeddingResponse.ProtoReflect.Descriptor instead.
func (*TextEmbeddingResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{4}
}

func (x *TextEmbeddingResponse) GetTextFeatureVector() []float32 {
	if x != nil {
		return x.TextFeatureVector
	}
	return nil
}

func (x *TextEmbeddingResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *TextEmbeddingResponse) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

// PredictRequest: 单个通用预测请求
type PredictRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 Any 类型或 Oneof 来灵活处理不同模型的输入
	// 例如：
	// google.protobuf.Any input_data = 1; // 更灵活，但客户端需要知道如何打包/解包
	//
	// 或者使用 Oneof 针对常见类型：
	//
	// Types that are valid to be assigned to InputData:
	//
	//	*PredictRequest_RawData
	//	*PredictRequest_FloatFeatures
	//	*PredictRequest_TextInput
	InputData     isPredictRequest_InputData `protobuf_oneof:"input_data"`
	ModelName     string                     `protobuf:"bytes,4,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`          // 明确指定要调用的模型名称 (e.g., "resnet50_classifier")
	ModelVersion  string                     `protobuf:"bytes,5,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // (Optional) 指定模型版本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PredictRequest) Reset() {
	*x = PredictRequest{}
	mi := &file_ml_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictRequest) ProtoMessage() {}

func (x *PredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictRequest.ProtoReflect.Descriptor instead.
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{5}
}

func (x *PredictRequest) GetInputData() isPredictRequest_InputData {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *PredictRequest) GetRawData() []byte {
	if x != nil {
		if x, ok := x.InputData.(*PredictRequest_RawData); ok {
			return x.RawData
		}
	}
	return nil
}

func (x *PredictRequest) GetFloatFeatures() *FloatFeatures {
	if x != nil {
		if x, ok := x.InputData.(*PredictRequest_FloatFeatures); ok {
			return x.FloatFeatures
		}
	}
	return nil
}

func (x *PredictRequest) GetTextInput() string {
	if x != nil {
		if x, ok := x.InputData.(*PredictRequest_TextInput); ok {
			return x.TextInput
		}
	}
	return ""
}

func (x *PredictRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *PredictRequest) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

type isPredictRequest_InputData interface {
	isPredictRequest_InputData()
}

type PredictRequest_RawData struct {
	RawData []byte `protobuf:"bytes,1,opt,name=raw_data,json=rawData,proto3,oneof"`
}

type PredictRequest_FloatFeatures struct {
	FloatFeatures *FloatFeatures `protobuf:"bytes,2,opt,name=float_features,json=floatFeatures,proto3,oneof"`
}

type PredictRequest_TextInput struct {
	TextInput string `protobuf:"bytes,3,opt,name=text_input,json=textInput,proto3,oneof"` // 更多特定类型可以在这里添加
}

func (*PredictRequest_RawData) isPredictRequest_InputData() {}

func (*PredictRequest_FloatFeatures) isPredictRequest_InputData() {}

func (*PredictRequest_TextInput) isPredictRequest_InputData() {}

// PredictResponse: 通用预测响应
type PredictResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 同样，使用 Any 或 Oneof 来处理不同模型的输出
	//
	// Types that are valid to be assigned to OutputData:
	//
	//	*PredictResponse_PredictionFloats
	//	*PredictResponse_PredictionText
	OutputData       isPredictResponse_OutputData `protobuf_oneof:"output_data"`
	Confidence       float32                      `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`                                      // 置信度
	ModelName        string                       `protobuf:"bytes,4,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`                         // 返回使用的模型名称
	ModelVersion     string                       `protobuf:"bytes,5,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`                // 返回使用的模型版本
	PredictionTimeMs int64                        `protobuf:"varint,6,opt,name=prediction_time_ms,json=predictionTimeMs,proto3" json:"prediction_time_ms,omitempty"` // Unix时间戳（毫秒）或直接表示持续时间
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PredictResponse) Reset() {
	*x = PredictResponse{}
	mi := &file_ml_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictResponse) ProtoMessage() {}

func (x *PredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictResponse.ProtoReflect.Descriptor instead.
func (*PredictResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{6}
}

func (x *PredictResponse) GetOutputData() isPredictResponse_OutputData {
	if x != nil {
		return x.OutputData
	}
	return nil
}

func (x *PredictResponse) GetPredictionFloats() *PredictionFloats {
	if x != nil {
		if x, ok := x.OutputData.(*PredictResponse_PredictionFloats); ok {
			return x.PredictionFloats
		}
	}
	return nil
}

func (x *PredictResponse) GetPredictionText() string {
	if x != nil {
		if x, ok := x.OutputData.(*PredictResponse_PredictionText); ok {
			return x.PredictionText
		}
	}
	return ""
}

func (x *PredictResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *PredictResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *PredictResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *PredictResponse) GetPredictionTimeMs() int64 {
	if x != nil {
		return x.PredictionTimeMs
	}
	return 0
}

type isPredictResponse_OutputData interface {
	isPredictResponse_OutputData()
}

type PredictResponse_PredictionFloats struct {
	PredictionFloats *PredictionFloats `protobuf:"bytes,1,opt,name=prediction_floats,json=predictionFloats,proto3,oneof"`
}

type PredictResponse_PredictionText struct {
	PredictionText string `protobuf:"bytes,2,opt,name=prediction_text,json=predictionText,proto3,oneof"` // 更多特定类型可以在这里添加
}

func (*PredictResponse_PredictionFloats) isPredictResponse_OutputData() {}

func (*PredictResponse_PredictionText) isPredictResponse_OutputData() {}

// BatchPredictRequest: 批量通用预测请求
type BatchPredictRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*PredictRequest      `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	ModelName     string                 `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"` // 可选，批次内所有请求使用同一模型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchPredictRequest) Reset() {
	*x = BatchPredictRequest{}
	mi := &file_ml_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchPredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPredictRequest) ProtoMessage() {}

func (x *BatchPredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPredictRequest.ProtoReflect.Descriptor instead.
func (*BatchPredictRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{7}
}

func (x *BatchPredictRequest) GetRequests() []*PredictRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *BatchPredictRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

// BatchPredictResponse: 批量通用预测响应
type BatchPredictResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []*PredictResponse     `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	SuccessCount  int32                  `protobuf:"varint,2,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailedCount   int32                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchPredictResponse) Reset() {
	*x = BatchPredictResponse{}
	mi := &file_ml_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchPredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPredictResponse) ProtoMessage() {}

func (x *BatchPredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPredictResponse.ProtoReflect.Descriptor instead.
func (*BatchPredictResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{8}
}

func (x *BatchPredictResponse) GetResponses() []*PredictResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *BatchPredictResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchPredictResponse) GetFailedCount() int32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

type FloatFeatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []float32              `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FloatFeatures) Reset() {
	*x = FloatFeatures{}
	mi := &file_ml_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FloatFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatFeatures) ProtoMessage() {}

func (x *FloatFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatFeatures.ProtoReflect.Descriptor instead.
func (*FloatFeatures) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{9}
}

func (x *FloatFeatures) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type PredictionFloats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []float32              `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PredictionFloats) Reset() {
	*x = PredictionFloats{}
	mi := &file_ml_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictionFloats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictionFloats) ProtoMessage() {}

func (x *PredictionFloats) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictionFloats.ProtoReflect.Descriptor instead.
func (*PredictionFloats) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{10}
}

func (x *PredictionFloats) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// HealthCheckRequest: 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"` // 可以是 "all" 或具体的模型名称 (e.g., "CLIP_ImageProcessor", "FaceRecognizer")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_ml_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{11}
}

func (x *HealthCheckRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// HealthCheckResponse: 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=prediction.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	ModelName     string                            `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`              // 返回检查的模型名称
	ModelVersion  string                            `protobuf:"bytes,3,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`     // 返回模型版本
	UptimeSeconds int64                             `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"` // 服务运行时间
	Message       string                            `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                                   // 可选，提供更详细的状态信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_ml_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{12}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func (x *HealthCheckResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *HealthCheckResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *HealthCheckResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BioAtlasResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ---- 正常成功时用到的字段 ----
	ImageId          string                  `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	PredictedResult  []*LabelScore           `protobuf:"bytes,3,rep,name=predicted_result,json=predictedResult,proto3" json:"predicted_result,omitempty"` // Top-3 {label, prob}
	ModelVersion     string                  `protobuf:"bytes,4,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
	ProcessingTimeMs int64                   `protobuf:"varint,6,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	Status           BioAtlasResponse_Status `protobuf:"varint,7,opt,name=status,proto3,enum=prediction.BioAtlasResponse_Status" json:"status,omitempty"`
	// （可选）供调试或前端展示的文本
	Message       string `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BioAtlasResponse) Reset() {
	*x = BioAtlasResponse{}
	mi := &file_ml_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BioAtlasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BioAtlasResponse) ProtoMessage() {}

func (x *BioAtlasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BioAtlasResponse.ProtoReflect.Descriptor instead.
func (*BioAtlasResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{13}
}

func (x *BioAtlasResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *BioAtlasResponse) GetPredictedResult() []*LabelScore {
	if x != nil {
		return x.PredictedResult
	}
	return nil
}

func (x *BioAtlasResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *BioAtlasResponse) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *BioAtlasResponse) GetStatus() BioAtlasResponse_Status {
	if x != nil {
		return x.Status
	}
	return BioAtlasResponse_OK
}

func (x *BioAtlasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_ml_service_proto protoreflect.FileDescriptor

const file_ml_service_proto_rawDesc = "" +
	"\n" +
	"\x10ml_service.proto\x12\n" +
	"prediction\"M\n" +
	"\n" +
	"LabelScore\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12)\n" +
	"\x10similarity_score\x18\x02 \x01(\x02R\x0fsimilarityScore\"\x99\x01\n" +
	"\x13ImageProcessRequest\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12\x1d\n" +
	"\n" +
	"image_data\x18\x02 \x01(\fR\timageData\x12#\n" +
	"\rtarget_labels\x18\x03 \x03(\tR\ftargetLabels\x12#\n" +
	"\rmodel_version\x18\x04 \x01(\tR\fmodelVersion\"\xf9\x01\n" +
	"\x14ImageProcessResponse\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x120\n" +
	"\x14image_feature_vector\x18\x02 \x03(\x02R\x12imageFeatureVector\x12A\n" +
	"\x10predicted_scores\x18\x03 \x03(\v2\x16.prediction.LabelScoreR\x0fpredictedScores\x12#\n" +
	"\rmodel_version\x18\x04 \x01(\tR\fmodelVersion\x12,\n" +
	"\x12processing_time_ms\x18\x05 \x01(\x03R\x10processingTimeMs\"O\n" +
	"\x14TextEmbeddingRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12#\n" +
	"\rmodel_version\x18\x02 \x01(\tR\fmodelVersion\"\x9a\x01\n" +
	"\x15TextEmbeddingResponse\x12.\n" +
	"\x13text_feature_vector\x18\x01 \x03(\x02R\x11textFeatureVector\x12#\n" +
	"\rmodel_version\x18\x02 \x01(\tR\fmodelVersion\x12,\n" +
	"\x12processing_time_ms\x18\x03 \x01(\x03R\x10processingTimeMs\"\xe4\x01\n" +
	"\x0ePredictRequest\x12\x1b\n" +
	"\braw_data\x18\x01 \x01(\fH\x00R\arawData\x12B\n" +
	"\x0efloat_features\x18\x02 \x01(\v2\x19.prediction.FloatFeaturesH\x00R\rfloatFeatures\x12\x1f\n" +
	"\n" +
	"text_input\x18\x03 \x01(\tH\x00R\ttextInput\x12\x1d\n" +
	"\n" +
	"model_name\x18\x04 \x01(\tR\tmodelName\x12#\n" +
	"\rmodel_version\x18\x05 \x01(\tR\fmodelVersionB\f\n" +
	"\n" +
	"input_data\"\xaa\x02\n" +
	"\x0fPredictResponse\x12K\n" +
	"\x11prediction_floats\x18\x01 \x01(\v2\x1c.prediction.PredictionFloatsH\x00R\x10predictionFloats\x12)\n" +
	"\x0fprediction_text\x18\x02 \x01(\tH\x00R\x0epredictionText\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\x12\x1d\n" +
	"\n" +
	"model_name\x18\x04 \x01(\tR\tmodelName\x12#\n" +
	"\rmodel_version\x18\x05 \x01(\tR\fmodelVersion\x12,\n" +
	"\x12prediction_time_ms\x18\x06 \x01(\x03R\x10predictionTimeMsB\r\n" +
	"\voutput_data\"l\n" +
	"\x13BatchPredictRequest\x126\n" +
	"\brequests\x18\x01 \x03(\v2\x1a.prediction.PredictRequestR\brequests\x12\x1d\n" +
	"\n" +
	"model_name\x18\x02 \x01(\tR\tmodelName\"\x99\x01\n" +
	"\x14BatchPredictResponse\x129\n" +
	"\tresponses\x18\x01 \x03(\v2\x1b.prediction.PredictResponseR\tresponses\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x05R\fsuccessCount\x12!\n" +
	"\ffailed_count\x18\x03 \x01(\x05R\vfailedCount\"'\n" +
	"\rFloatFeatures\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x02R\x06values\"*\n" +
	"\x10PredictionFloats\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x02R\x06values\"7\n" +
	"\x12HealthCheckRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\"\xb9\x02\n" +
	"\x13HealthCheckResponse\x12E\n" +
	"\x06status\x18\x01 \x01(\x0e2-.prediction.HealthCheckResponse.ServingStatusR\x06status\x12\x1d\n" +
	"\n" +
	"model_name\x18\x02 \x01(\tR\tmodelName\x12#\n" +
	"\rmodel_version\x18\x03 \x01(\tR\fmodelVersion\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x03R\ruptimeSeconds\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"V\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\x12\x1a\n" +
	"\x16SERVICE_SPECIFIC_ERROR\x10\x03\"\xe2\x02\n" +
	"\x10BioAtlasResponse\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12A\n" +
	"\x10predicted_result\x18\x03 \x03(\v2\x16.prediction.LabelScoreR\x0fpredictedResult\x12#\n" +
	"\rmodel_version\x18\x04 \x01(\tR\fmodelVersion\x12,\n" +
	"\x12processing_time_ms\x18\x06 \x01(\x03R\x10processingTimeMs\x12;\n" +
	"\x06status\x18\a \x01(\x0e2#.prediction.BioAtlasResponse.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\"F\n" +
	"\x06Status\x12\x06\n" +
	"\x02OK\x10\x00\x12\x0e\n" +
	"\n" +
	"NOT_ANIMAL\x10\x01\x12\x0f\n" +
	"\vMODEL_ERROR\x10\x02\x12\x13\n" +
	"\x0fINVALID_REQUEST\x10\x032\xd2\x05\n" +
	"\x11PredictionService\x12X\n" +
	"\x13ProcessImageForCLIP\x12\x1f.prediction.ImageProcessRequest\x1a .prediction.ImageProcessResponse\x12^\n" +
	"\x17GetTextEmbeddingForCLIP\x12 .prediction.TextEmbeddingRequest\x1a!.prediction.TextEmbeddingResponse\x12[\n" +
	"\x16ProcessImageForBioCLIP\x12\x1f.prediction.ImageProcessRequest\x1a .prediction.ImageProcessResponse\x12a\n" +
	"\x1aGetTextEmbeddingForBioCLIP\x12 .prediction.TextEmbeddingRequest\x1a!.prediction.TextEmbeddingResponse\x12V\n" +
	"\x15GetSpeciesForBioAtlas\x12\x1f.prediction.ImageProcessRequest\x1a\x1c.prediction.BioAtlasResponse\x12D\n" +
	"\aPredict\x12\x1a.prediction.PredictRequest\x1a\x1b.prediction.PredictResponse\"\x00\x12S\n" +
	"\fBatchPredict\x12\x1f.prediction.BatchPredictRequest\x1a .prediction.BatchPredictResponse\"\x00\x12P\n" +
	"\vHealthCheck\x12\x1e.prediction.HealthCheckRequest\x1a\x1f.prediction.HealthCheckResponse\"\x00B\x1eZ\x1crkphoto-manager/server/protob\x06proto3"

var (
	file_ml_service_proto_rawDescOnce sync.Once
	file_ml_service_proto_rawDescData []byte
)

func file_ml_service_proto_rawDescGZIP() []byte {
	file_ml_service_proto_rawDescOnce.Do(func() {
		file_ml_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ml_service_proto_rawDesc), len(file_ml_service_proto_rawDesc)))
	})
	return file_ml_service_proto_rawDescData
}

var file_ml_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ml_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ml_service_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: prediction.HealthCheckResponse.ServingStatus
	(BioAtlasResponse_Status)(0),           // 1: prediction.BioAtlasResponse.Status
	(*LabelScore)(nil),                     // 2: prediction.LabelScore
	(*ImageProcessRequest)(nil),            // 3: prediction.ImageProcessRequest
	(*ImageProcessResponse)(nil),           // 4: prediction.ImageProcessResponse
	(*TextEmbeddingRequest)(nil),           // 5: prediction.TextEmbeddingRequest
	(*TextEmbeddingResponse)(nil),          // 6: prediction.TextEmbeddingResponse
	(*PredictRequest)(nil),                 // 7: prediction.PredictRequest
	(*PredictResponse)(nil),                // 8: prediction.PredictResponse
	(*BatchPredictRequest)(nil),            // 9: prediction.BatchPredictRequest
	(*BatchPredictResponse)(nil),           // 10: prediction.BatchPredictResponse
	(*FloatFeatures)(nil),                  // 11: prediction.FloatFeatures
	(*PredictionFloats)(nil),               // 12: prediction.PredictionFloats
	(*HealthCheckRequest)(nil),             // 13: prediction.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 14: prediction.HealthCheckResponse
	(*BioAtlasResponse)(nil),               // 15: prediction.BioAtlasResponse
}
var file_ml_service_proto_depIdxs = []int32{
	2,  // 0: prediction.ImageProcessResponse.predicted_scores:type_name -> prediction.LabelScore
	11, // 1: prediction.PredictRequest.float_features:type_name -> prediction.FloatFeatures
	12, // 2: prediction.PredictResponse.prediction_floats:type_name -> prediction.PredictionFloats
	7,  // 3: prediction.BatchPredictRequest.requests:type_name -> prediction.PredictRequest
	8,  // 4: prediction.BatchPredictResponse.responses:type_name -> prediction.PredictResponse
	0,  // 5: prediction.HealthCheckResponse.status:type_name -> prediction.HealthCheckResponse.ServingStatus
	2,  // 6: prediction.BioAtlasResponse.predicted_result:type_name -> prediction.LabelScore
	1,  // 7: prediction.BioAtlasResponse.status:type_name -> prediction.BioAtlasResponse.Status
	3,  // 8: prediction.PredictionService.ProcessImageForCLIP:input_type -> prediction.ImageProcessRequest
	5,  // 9: prediction.PredictionService.GetTextEmbeddingForCLIP:input_type -> prediction.TextEmbeddingRequest
	3,  // 10: prediction.PredictionService.ProcessImageForBioCLIP:input_type -> prediction.ImageProcessRequest
	5,  // 11: prediction.PredictionService.GetTextEmbeddingForBioCLIP:input_type -> prediction.TextEmbeddingRequest
	3,  // 12: prediction.PredictionService.GetSpeciesForBioAtlas:input_type -> prediction.ImageProcessRequest
	7,  // 13: prediction.PredictionService.Predict:input_type -> prediction.PredictRequest
	9,  // 14: prediction.PredictionService.BatchPredict:input_type -> prediction.BatchPredictRequest
	13, // 15: prediction.PredictionService.HealthCheck:input_type -> prediction.HealthCheckRequest
	4,  // 16: prediction.PredictionService.ProcessImageForCLIP:output_type -> prediction.ImageProcessResponse
	6,  // 17: prediction.PredictionService.GetTextEmbeddingForCLIP:output_type -> prediction.TextEmbeddingResponse
	4,  // 18: prediction.PredictionService.ProcessImageForBioCLIP:output_type -> prediction.ImageProcessResponse
	6,  // 19: prediction.PredictionService.GetTextEmbeddingForBioCLIP:output_type -> prediction.TextEmbeddingResponse
	15, // 20: prediction.PredictionService.GetSpeciesForBioAtlas:output_type -> prediction.BioAtlasResponse
	8,  // 21: prediction.PredictionService.Predict:output_type -> prediction.PredictResponse
	10, // 22: prediction.PredictionService.BatchPredict:output_type -> prediction.BatchPredictResponse
	14, // 23: prediction.PredictionService.HealthCheck:output_type -> prediction.HealthCheckResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ml_service_proto_init() }
func file_ml_service_proto_init() {
	if File_ml_service_proto != nil {
		return
	}
	file_ml_service_proto_msgTypes[5].OneofWrappers = []any{
		(*PredictRequest_RawData)(nil),
		(*PredictRequest_FloatFeatures)(nil),
		(*PredictRequest_TextInput)(nil),
	}
	file_ml_service_proto_msgTypes[6].OneofWrappers = []any{
		(*PredictResponse_PredictionFloats)(nil),
		(*PredictResponse_PredictionText)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ml_service_proto_rawDesc), len(file_ml_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ml_service_proto_goTypes,
		DependencyIndexes: file_ml_service_proto_depIdxs,
		EnumInfos:         file_ml_service_proto_enumTypes,
		MessageInfos:      file_ml_service_proto_msgTypes,
	}.Build()
	File_ml_service_proto = out.File
	file_ml_service_proto_goTypes = nil
	file_ml_service_proto_depIdxs = nil
}
